on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

    paths:
      - ".github/workflows/docker-app.yml"
      - "*.app.test.yml"
      - "app/**"

  # Run tests for any PRs.
  pull_request:

  # Triggered every day.
  schedule:
    - cron: "0 0 * * *"

env:
  REGISTRY: docker.io
  REGISTRY_USERNAME: ${{ secrets.DOCKER_IO_USERNAME }}
  REGISTRY_PASSWORD: ${{ secrets.DOCKER_IO_PASSWORD }}

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        env:
          FILE_PATH: docker-compose.app.test.yml
        run: |
          if [ -f $FILE_PATH ]; then
            docker-compose --file $FILE_PATH build
          fi

  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'schedule'

    strategy:
      matrix:
        feature:
          - name: cacher
            file: app/apt-cacher-ng.Dockerfile
            image: app:cacher
          - name: vlmcsd
            file: app/vlmcsd.Dockerfile
            image: app:vlmcsd
          - name: isc-dhcpd
            file: app/dhcpd/alpine.Dockerfile
            image: isc-dhcpd:alpine
          - name: nostrict-5.7
            file: app/mysql/nostrict-5.7.Dockerfile
            image: mysql:nostrict-5.7
          - name: pescms-5.7
            file: app/mysql/pescms-5.7.Dockerfile
            image: mysql:pescms-5.7

    steps:
      - uses: actions/checkout@v2

      - name: Build the Docker image
        run: docker build . --file ${{ matrix.feature.file }}
          --tag ${{ matrix.feature.image }}

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_IO_PASSWORD }}" |
          docker login $REGISTRY -u ${{ secrets.DOCKER_IO_USERNAME }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=$REGISTRY/${{ secrets.DOCKER_IO_USERNAME }}/${{ matrix.feature.image }}
          docker tag ${{ matrix.feature.image }} $IMAGE_ID
          docker push $IMAGE_ID
